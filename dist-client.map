{
  "version": 3,
  "sources": ["app/client/src/index.tsx"],
  "sourcesContent": ["import { App } from '@client/App'\nimport { isValidClientSettings } from '@client/functions'\nimport { createAppConfigFromFe } from '@client/utils/createAppConfigFromFe'\nimport { createTagManagerSnippet } from '@client/utils/createTagManagerSnippet'\nimport { BrowserClient, Hub, Scope } from '@sentry/browser'\nimport * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nexport const initFlightWatchdogClient = async (settingsData: unknown) => {\n    const settings = isValidClientSettings(settingsData)\n\n    const sentryClient = settings.sentryDns\n        ? new Hub(\n              new BrowserClient({\n                  dsn: settings.sentryDns.toString(),\n                  release: process.env.RELEASE_HASH,\n              }),\n          )\n        : undefined\n\n    const frontendUrl = decodeURIComponent(window.location.href)\n\n    const handleError = (err: unknown, data?: unknown) => {\n        handleErrorDefault(sentryClient, frontendUrl, err, data)\n    }\n\n    try {\n        if (settings.analyticsId) {\n            createTagManagerSnippet(settings.analyticsId.toString())\n        }\n\n        const id = 'flight-watchdog-client-app'\n        const node = document.createElement('div')\n        node.setAttribute('id', id)\n        document.body.appendChild(node)\n\n        const appConfig = createAppConfigFromFe(document, frontendUrl)\n\n        if (!appConfig) {\n            return\n        }\n\n        ReactDOM.render(\n            <App appConfig={appConfig} clientSettings={settings} handleError={handleError} />,\n            document.getElementById(id),\n        )\n    } catch (err) {\n        handleError(err)\n    }\n}\n\nconst handleErrorDefault = (sentryClient: Hub | undefined, url: string, err: unknown, data?: unknown) => {\n    // tslint:disable-next-line\n    console.log('Flight watchdog error:', err)\n    if (sentryClient) {\n        sentryClient.configureScope((scope: Scope) => {\n            scope.setExtra('url', url)\n            if (data) {\n                scope.setExtra('data', JSON.stringify(data))\n            }\n        })\n        sentryClient.captureException(err)\n    }\n}\n\n// set as global function\n// tslint:disable-next-line:no-any\nconst global = window as any\n// tslint:disable-next-line:no-object-mutation no-unsafe-any\nglobal.initFlightWatchdogClient = initFlightWatchdogClient\n"],
  "mappings": "aAAA,OAAS,OAAAA,MAAW,cACpB,OAAS,yBAAAC,MAA6B,oBACtC,OAAS,yBAAAC,MAA6B,sCACtC,OAAS,2BAAAC,MAA+B,wCACxC,OAAS,iBAAAC,EAAe,OAAAC,MAAkB,kBAC1C,UAAYC,MAAW,QACvB,UAAYC,MAAc,YAEnB,aAAM,yBAA2B,MAAOC,GAA0B,CACrE,MAAMC,EAAWR,EAAsBO,CAAY,EAE7CE,EAAeD,EAAS,UACxB,IAAIJ,EACA,IAAID,EAAc,CACd,IAAKK,EAAS,UAAU,SAAS,EACjC,QAAS,QAAQ,IAAI,YACzB,CAAC,CACL,EACA,OAEAE,EAAc,mBAAmB,OAAO,SAAS,IAAI,EAErDC,EAAc,CAACC,EAAcC,IAAmB,CAClDC,EAAmBL,EAAcC,EAAaE,EAAKC,CAAI,CAC3D,EAEA,GAAI,CACIL,EAAS,aACTN,EAAwBM,EAAS,YAAY,SAAS,CAAC,EAG3D,MAAMO,EAAK,6BACLC,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,aAAa,KAAMD,CAAE,EAC1B,SAAS,KAAK,YAAYC,CAAI,EAE9B,MAAMC,EAAYhB,EAAsB,SAAUS,CAAW,EAE7D,GAAI,CAACO,EACD,OAGJX,EAAS,OACLD,EAAA,cAACN,EAAA,CAAI,UAAWkB,EAAW,eAAgBT,EAAU,YAAaG,EAAa,EAC/E,SAAS,eAAeI,CAAE,CAC9B,CACJ,OAASH,EAAP,CACED,EAAYC,CAAG,CACnB,CACJ,EAEA,MAAME,EAAqB,CAACL,EAA+BS,EAAaN,EAAcC,IAAmB,CAErG,QAAQ,IAAI,yBAA0BD,CAAG,EACrCH,IACAA,EAAa,eAAgBU,GAAiB,CAC1CA,EAAM,SAAS,MAAOD,CAAG,EACrBL,GACAM,EAAM,SAAS,OAAQ,KAAK,UAAUN,CAAI,CAAC,CAEnD,CAAC,EACDJ,EAAa,iBAAiBG,CAAG,EAEzC,EAIMQ,EAAS,OAEfA,EAAO,yBAA2B",
  "names": ["App", "isValidClientSettings", "createAppConfigFromFe", "createTagManagerSnippet", "BrowserClient", "Hub", "React", "ReactDOM", "settingsData", "settings", "sentryClient", "frontendUrl", "handleError", "err", "data", "handleErrorDefault", "id", "node", "appConfig", "url", "scope", "global"]
}
